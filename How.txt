Crear repo en github y pushear

Crear .env para las variables de entorno, agregar la apikey.
npm install en la carpeta api (backend)
npm install en la carpeta client (frontend)

BD:
crear BD videogames en psql
npm start para ver si se conecta al puerto
crear API KEY
  - GET https://api.rawg.io/api/games?key=76827655bfd449d1a2ad232fb0bb470f
  - GET https://api.rawg.io/api/games?search=Grand-Theft-Auto-V?key=76827655bfd449d1a2ad232fb0bb470f
  - GET https://api.rawg.io/api/genres?key=76827655bfd449d1a2ad232fb0bb470f
  - GET https://api.rawg.io/api/games/3498?key=76827655bfd449d1a2ad232fb0bb470f
analizar la data de la API
crear modelos - chequear que aparezcan en la base de datos creada.

BACKEND:
modularizar, crear rutas de prueba, probar en postman
estan modularizadas en genre, videogame y videogames
!!!!!!!!los async await siempre retornan promesas, los axios.get tambien.---- AXIOS SE INSTALA
El axios.get es similar al fetch.then ----- VER COMO SE HACE CON FETCH ----VER COMO HACERLO CON PROMESAS

FRONTEND:
Creo las carpetas/archivos que me faltan, siguiendo el README
- landing page
- home
- detalle del VG
- formulario para crear nuevo VG
- card del vg
- navbar
- searchbar
- paginado

Instalo redux-react: 
npm i redux redux-thunk react-router-dom
Instalo react router:
npm i react-router
VER REACT ROUTER DOM!!!!!!!!!!!!!!!!!!!!!!!!!!
Los pedidos a la API NO SON funciones puras
f pura = si pongo mil veces los mismos valores a los parametros, me va a devolver mil veces el mismo resultado. 

